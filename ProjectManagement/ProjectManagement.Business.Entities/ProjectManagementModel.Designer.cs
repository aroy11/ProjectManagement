//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProjectManagementModel", "FK_Task_Parent_ID", "ParentTask", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectManagement.Business.Entities.ParentTask), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagement.Business.Entities.Task), true)]
[assembly: EdmRelationshipAttribute("ProjectManagementModel", "FK_Task_Project_ID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectManagement.Business.Entities.Project), "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagement.Business.Entities.Task), true)]
[assembly: EdmRelationshipAttribute("ProjectManagementModel", "FK_User_Project_ID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectManagement.Business.Entities.Project), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagement.Business.Entities.User), true)]
[assembly: EdmRelationshipAttribute("ProjectManagementModel", "FK_User_Task_ID", "Task", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectManagement.Business.Entities.Task), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectManagement.Business.Entities.User), true)]

#endregion

namespace ProjectManagement.Business.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProjectManagementEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProjectManagementEntities object using the connection string found in the 'ProjectManagementEntities' section of the application configuration file.
        /// </summary>
        public ProjectManagementEntities() : base("name=ProjectManagementEntities", "ProjectManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectManagementEntities object.
        /// </summary>
        public ProjectManagementEntities(string connectionString) : base(connectionString, "ProjectManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProjectManagementEntities object.
        /// </summary>
        public ProjectManagementEntities(EntityConnection connection) : base(connection, "ProjectManagementEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParentTask> ParentTasks
        {
            get
            {
                if ((_ParentTasks == null))
                {
                    _ParentTasks = base.CreateObjectSet<ParentTask>("ParentTasks");
                }
                return _ParentTasks;
            }
        }
        private ObjectSet<ParentTask> _ParentTasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParentTasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParentTasks(ParentTask parentTask)
        {
            base.AddObject("ParentTasks", parentTask);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagementModel", Name="ParentTask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParentTask : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParentTask object.
        /// </summary>
        /// <param name="parent_ID">Initial value of the Parent_ID property.</param>
        public static ParentTask CreateParentTask(global::System.Int32 parent_ID)
        {
            ParentTask parentTask = new ParentTask();
            parentTask.Parent_ID = parent_ID;
            return parentTask;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Parent_ID
        {
            get
            {
                return _Parent_ID;
            }
            set
            {
                if (_Parent_ID != value)
                {
                    OnParent_IDChanging(value);
                    ReportPropertyChanging("Parent_ID");
                    _Parent_ID = StructuralObject.SetValidValue(value, "Parent_ID");
                    ReportPropertyChanged("Parent_ID");
                    OnParent_IDChanged();
                }
            }
        }
        private global::System.Int32 _Parent_ID;
        partial void OnParent_IDChanging(global::System.Int32 value);
        partial void OnParent_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Parent_Task
        {
            get
            {
                return _Parent_Task;
            }
            set
            {
                OnParent_TaskChanging(value);
                ReportPropertyChanging("Parent_Task");
                _Parent_Task = StructuralObject.SetValidValue(value, true, "Parent_Task");
                ReportPropertyChanged("Parent_Task");
                OnParent_TaskChanged();
            }
        }
        private global::System.String _Parent_Task;
        partial void OnParent_TaskChanging(global::System.String value);
        partial void OnParent_TaskChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagementModel", "FK_Task_Parent_ID", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("ProjectManagementModel.FK_Task_Parent_ID", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("ProjectManagementModel.FK_Task_Parent_ID", "Task", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagementModel", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="project_ID">Initial value of the Project_ID property.</param>
        public static Project CreateProject(global::System.Int32 project_ID)
        {
            Project project = new Project();
            project.Project_ID = project_ID;
            return project;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Project_ID
        {
            get
            {
                return _Project_ID;
            }
            set
            {
                if (_Project_ID != value)
                {
                    OnProject_IDChanging(value);
                    ReportPropertyChanging("Project_ID");
                    _Project_ID = StructuralObject.SetValidValue(value, "Project_ID");
                    ReportPropertyChanged("Project_ID");
                    OnProject_IDChanged();
                }
            }
        }
        private global::System.Int32 _Project_ID;
        partial void OnProject_IDChanging(global::System.Int32 value);
        partial void OnProject_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Project_Name
        {
            get
            {
                return _Project_Name;
            }
            set
            {
                OnProject_NameChanging(value);
                ReportPropertyChanging("Project_Name");
                _Project_Name = StructuralObject.SetValidValue(value, true, "Project_Name");
                ReportPropertyChanged("Project_Name");
                OnProject_NameChanged();
            }
        }
        private global::System.String _Project_Name;
        partial void OnProject_NameChanging(global::System.String value);
        partial void OnProject_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Start_Date
        {
            get
            {
                return _Start_Date;
            }
            set
            {
                OnStart_DateChanging(value);
                ReportPropertyChanging("Start_Date");
                _Start_Date = StructuralObject.SetValidValue(value, "Start_Date");
                ReportPropertyChanged("Start_Date");
                OnStart_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Start_Date;
        partial void OnStart_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnStart_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> End_Date
        {
            get
            {
                return _End_Date;
            }
            set
            {
                OnEnd_DateChanging(value);
                ReportPropertyChanging("End_Date");
                _End_Date = StructuralObject.SetValidValue(value, "End_Date");
                ReportPropertyChanged("End_Date");
                OnEnd_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _End_Date;
        partial void OnEnd_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnd_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, "Priority");
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Priority;
        partial void OnPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagementModel", "FK_Task_Project_ID", "Task")]
        public EntityCollection<Task> Tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Task>("ProjectManagementModel.FK_Task_Project_ID", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Task>("ProjectManagementModel.FK_Task_Project_ID", "Task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagementModel", "FK_User_Project_ID", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ProjectManagementModel.FK_User_Project_ID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ProjectManagementModel.FK_User_Project_ID", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagementModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="task_ID">Initial value of the Task_ID property.</param>
        public static Task CreateTask(global::System.Int32 task_ID)
        {
            Task task = new Task();
            task.Task_ID = task_ID;
            return task;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Task_ID
        {
            get
            {
                return _Task_ID;
            }
            set
            {
                if (_Task_ID != value)
                {
                    OnTask_IDChanging(value);
                    ReportPropertyChanging("Task_ID");
                    _Task_ID = StructuralObject.SetValidValue(value, "Task_ID");
                    ReportPropertyChanged("Task_ID");
                    OnTask_IDChanged();
                }
            }
        }
        private global::System.Int32 _Task_ID;
        partial void OnTask_IDChanging(global::System.Int32 value);
        partial void OnTask_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parent_ID
        {
            get
            {
                return _Parent_ID;
            }
            set
            {
                OnParent_IDChanging(value);
                ReportPropertyChanging("Parent_ID");
                _Parent_ID = StructuralObject.SetValidValue(value, "Parent_ID");
                ReportPropertyChanged("Parent_ID");
                OnParent_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Parent_ID;
        partial void OnParent_IDChanging(Nullable<global::System.Int32> value);
        partial void OnParent_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Project_ID
        {
            get
            {
                return _Project_ID;
            }
            set
            {
                OnProject_IDChanging(value);
                ReportPropertyChanging("Project_ID");
                _Project_ID = StructuralObject.SetValidValue(value, "Project_ID");
                ReportPropertyChanged("Project_ID");
                OnProject_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Project_ID;
        partial void OnProject_IDChanging(Nullable<global::System.Int32> value);
        partial void OnProject_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Task_Name
        {
            get
            {
                return _Task_Name;
            }
            set
            {
                OnTask_NameChanging(value);
                ReportPropertyChanging("Task_Name");
                _Task_Name = StructuralObject.SetValidValue(value, true, "Task_Name");
                ReportPropertyChanged("Task_Name");
                OnTask_NameChanged();
            }
        }
        private global::System.String _Task_Name;
        partial void OnTask_NameChanging(global::System.String value);
        partial void OnTask_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Start_Date
        {
            get
            {
                return _Start_Date;
            }
            set
            {
                OnStart_DateChanging(value);
                ReportPropertyChanging("Start_Date");
                _Start_Date = StructuralObject.SetValidValue(value, "Start_Date");
                ReportPropertyChanged("Start_Date");
                OnStart_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Start_Date;
        partial void OnStart_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnStart_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> End_Date
        {
            get
            {
                return _End_Date;
            }
            set
            {
                OnEnd_DateChanging(value);
                ReportPropertyChanging("End_Date");
                _End_Date = StructuralObject.SetValidValue(value, "End_Date");
                ReportPropertyChanged("End_Date");
                OnEnd_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _End_Date;
        partial void OnEnd_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnd_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, "Priority");
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Priority;
        partial void OnPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagementModel", "FK_Task_Parent_ID", "ParentTask")]
        public ParentTask ParentTask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentTask>("ProjectManagementModel.FK_Task_Parent_ID", "ParentTask").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentTask>("ProjectManagementModel.FK_Task_Parent_ID", "ParentTask").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParentTask> ParentTaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentTask>("ProjectManagementModel.FK_Task_Parent_ID", "ParentTask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParentTask>("ProjectManagementModel.FK_Task_Parent_ID", "ParentTask", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagementModel", "FK_Task_Project_ID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectManagementModel.FK_Task_Project_ID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectManagementModel.FK_Task_Project_ID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectManagementModel.FK_Task_Project_ID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectManagementModel.FK_Task_Project_ID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagementModel", "FK_User_Task_ID", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ProjectManagementModel.FK_User_Task_ID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ProjectManagementModel.FK_User_Task_ID", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectManagementModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="user_ID">Initial value of the User_ID property.</param>
        public static User CreateUser(global::System.Int32 user_ID)
        {
            User user = new User();
            user.User_ID = user_ID;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 User_ID
        {
            get
            {
                return _User_ID;
            }
            set
            {
                if (_User_ID != value)
                {
                    OnUser_IDChanging(value);
                    ReportPropertyChanging("User_ID");
                    _User_ID = StructuralObject.SetValidValue(value, "User_ID");
                    ReportPropertyChanged("User_ID");
                    OnUser_IDChanged();
                }
            }
        }
        private global::System.Int32 _User_ID;
        partial void OnUser_IDChanging(global::System.Int32 value);
        partial void OnUser_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String First_Name
        {
            get
            {
                return _First_Name;
            }
            set
            {
                OnFirst_NameChanging(value);
                ReportPropertyChanging("First_Name");
                _First_Name = StructuralObject.SetValidValue(value, true, "First_Name");
                ReportPropertyChanged("First_Name");
                OnFirst_NameChanged();
            }
        }
        private global::System.String _First_Name;
        partial void OnFirst_NameChanging(global::System.String value);
        partial void OnFirst_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Last_Name
        {
            get
            {
                return _Last_Name;
            }
            set
            {
                OnLast_NameChanging(value);
                ReportPropertyChanging("Last_Name");
                _Last_Name = StructuralObject.SetValidValue(value, true, "Last_Name");
                ReportPropertyChanged("Last_Name");
                OnLast_NameChanged();
            }
        }
        private global::System.String _Last_Name;
        partial void OnLast_NameChanging(global::System.String value);
        partial void OnLast_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Employee_ID
        {
            get
            {
                return _Employee_ID;
            }
            set
            {
                OnEmployee_IDChanging(value);
                ReportPropertyChanging("Employee_ID");
                _Employee_ID = StructuralObject.SetValidValue(value, "Employee_ID");
                ReportPropertyChanged("Employee_ID");
                OnEmployee_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Employee_ID;
        partial void OnEmployee_IDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployee_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Project_ID
        {
            get
            {
                return _Project_ID;
            }
            set
            {
                OnProject_IDChanging(value);
                ReportPropertyChanging("Project_ID");
                _Project_ID = StructuralObject.SetValidValue(value, "Project_ID");
                ReportPropertyChanged("Project_ID");
                OnProject_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Project_ID;
        partial void OnProject_IDChanging(Nullable<global::System.Int32> value);
        partial void OnProject_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Task_ID
        {
            get
            {
                return _Task_ID;
            }
            set
            {
                OnTask_IDChanging(value);
                ReportPropertyChanging("Task_ID");
                _Task_ID = StructuralObject.SetValidValue(value, "Task_ID");
                ReportPropertyChanged("Task_ID");
                OnTask_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _Task_ID;
        partial void OnTask_IDChanging(Nullable<global::System.Int32> value);
        partial void OnTask_IDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagementModel", "FK_User_Project_ID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectManagementModel.FK_User_Project_ID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectManagementModel.FK_User_Project_ID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectManagementModel.FK_User_Project_ID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectManagementModel.FK_User_Project_ID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectManagementModel", "FK_User_Task_ID", "Task")]
        public Task Task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("ProjectManagementModel.FK_User_Task_ID", "Task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("ProjectManagementModel.FK_User_Task_ID", "Task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Task> TaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Task>("ProjectManagementModel.FK_User_Task_ID", "Task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Task>("ProjectManagementModel.FK_User_Task_ID", "Task", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
